import React, { useState } from 'react';

function App() {
  const [goal, setGoal] = useState('');
  const [age, setAge] = useState('');
  const [weight, setWeight] = useState('');
  const [height, setHeight] = useState('');
  const [days, setDays] = useState('');
  const [location, setLocation] = useState('gym');
  const [result, setResult] = useState('');
  const [loading, setLoading] = useState(false);

  const generatePlan = async () => {
    setLoading(true);
    setResult('');

    const prompt = `
–°–æ–∑–¥–∞–π –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –Ω–∞ –Ω–µ–¥–µ–ª—é.
–¶–µ–ª—å: ${goal}, –≤–æ–∑—Ä–∞—Å—Ç: ${age}, –≤–µ—Å: ${weight} –∫–≥, —Ä–æ—Å—Ç: ${height} —Å–º, —Ç—Ä–µ–Ω–∏—Ä—É–µ—Ç—Å—è ${days} –¥–Ω–µ–π –≤ –Ω–µ–¥–µ–ª—é, —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏: ${location === 'gym' ? '–≤ –∑–∞–ª–µ' : '–¥–æ–º–∞'}.
    `;

    try {
      const res = await fetch("https://openrouter.ai/api/v1/chat/completions", {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`,
          'HTTP-Referer': 'http://localhost:3000',  // –∏–ª–∏ —Ç–≤–æ–π –¥–æ–º–µ–Ω –Ω–∞ –ø—Ä–æ–¥–µ
          'X-Title': 'GymMind'
        },
        body: JSON.stringify({
          model: 'mistralai/mistral-7b-instruct',
          messages: [{ role: 'user', content: prompt }],
          temperature: 0.7
        })
      });

      const data = await res.json();
      console.log("API response:", data);

      if (data.choices && data.choices.length > 0) {
        setResult(data.choices[0].message.content);
      } else {
        setResult('–û—à–∏–±–∫–∞: AI –Ω–µ –≤–µ—Ä–Ω—É–ª –æ—Ç–≤–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å –ª–æ–≥ –≤ –∫–æ–Ω—Å–æ–ª–∏.');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ:', error);
      setResult('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ AI.');
    }

    setLoading(false);
  };

  return (
    <div style={{ padding: '20px', fontFamily: 'Arial' }}>
      <h1>GymMind üß†üí™</h1>

      <input
        type="text"
        placeholder="–¢–≤–æ—è —Ü–µ–ª—å (–Ω–∞–ø—Ä–∏–º–µ—Ä: –Ω–∞–±–æ—Ä –º–∞—Å—Å—ã)"
        value={goal}
        onChange={e => setGoal(e.target.value)}
      /><br /><br />

      <input
        type="number"
        placeholder="–í–æ–∑—Ä–∞—Å—Ç"
        value={age}
        onChange={e => setAge(e.target.value)}
      /><br /><br />

      <input
        type="number"
        placeholder="–í–µ—Å (–∫–≥)"
        value={weight}
        onChange={e => setWeight(e.target.value)}
      /><br /><br />

      <input
        type="number"
        placeholder="–†–æ—Å—Ç (—Å–º)"
        value={height}
        onChange={e => setHeight(e.target.value)}
      /><br /><br />

      <input
        type="number"
        placeholder="–°–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –≤ –Ω–µ–¥–µ–ª—é —Ç—ã —Ç—Ä–µ–Ω–∏—Ä—É–µ—à—å—Å—è?"
        value={days}
        onChange={e => setDays(e.target.value)}
      /><br /><br />

      <select value={location} onChange={e => setLocation(e.target.value)}>
        <option value="gym">–ó–∞–ª</option>
        <option value="home">–î–æ–º</option>
      </select><br /><br />

      <button onClick={generatePlan} disabled={loading}>
        {loading ? '–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º...' : '–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–ª–∞–Ω'}
      </button><br /><br />

      <pre style={{ whiteSpace: 'pre-wrap', backgroundColor: '#f4f4f4', padding: '10px' }}>
        {result}
      </pre>
    </div>
  );
}

export default App;
